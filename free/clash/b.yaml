select: &select {type: select, exclude-filter: "(?i).*(10|ctcc|kr|tw|Traffic|Expire|官网|0\\.[0-9]|剩余|到期).*", include-all-proxies: true}
fallback: &fallback {type: fallback, url: "https://www.gstatic.com/generate_204", interval: 30, hidden: true, timeout: 600, max-failed-times: 3, include-all-proxies: true, exclude-filter: "(?i).*(10|ctcc|kr|tw|Traffic|Expire|官网|0\\.[0-9]|剩余|到期).*"}
load-balance: &load-balance {type: load-balance, strategy: consistent-hashing, url: "https://www.gstatic.com/generate_204", interval: 30, hidden: true, timeout: 600, max-failed-times: 3, include-all-proxies: true, exclude-filter: "(?i).*(10|ctcc|kr|tw|Traffic|Expire|官网|0\\.[0-9]|剩余|到期).*"}
url-test: &url-test {type: url-test, url: "https://www.gstatic.com/generate_204", interval: 30, tolerance: 300, hidden: true, timeout: 600, max-failed-times: 3, include-all-proxies: true, exclude-filter: "(?i).*(10|ctcc|kr|tw|Traffic|Expire|官网|0\\.[0-9]|剩余|到期).*"}
domain: &domain {proxy: M, interval: 86400, type: http, format: mrs, behavior: domain}
ipcidr: &ipcidr {proxy: M, interval: 86400, type: http, format: mrs, behavior: ipcidr}
classical: &classical {proxy: M, type: http, interval: 86400, behavior: classical, format: yaml}
mixed-port: 12138
redir-port: 7892
tproxy-port: 7893
allow-lan: true
bind-address: "*"
find-process-mode: off # always, strict, off
log-level: error # info, warning, error, debug
ipv6: false
udp: true
unified-delay: true
tcp-concurrent: true
profile: {store-selected: true, store-fake-ip: true}
external-controller: "0.0.0.0:9090"
secret: "101300"
authentication: ["huai:password12138"]
skip-auth-prefixes: [127.0.0.1/8, 192.168.0.0/16]
external-ui: ui
global-client-fingerprint: firefox
external-ui-url: "https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/dist.zip"
sniffer: {enable: true, force-dns-mapping: true, parse-pure-ip: true, override-destination: true, sniff: {QUIC: {ports: [443, 8443]}, TLS: {ports: [443, 8443]}, HTTP: {ports: [80, "8080-8880"], override-destination: true}}, skip-domain: ["Mijia Cloud", "dlg.io.mi.com"]}
tun: {enable: true, device: clash, stack: system, dns-hijack: [0.0.0.0:53], auto-route: true, udp-timeout: 60, mtu: 9000, auto-detect-interface: true, auto-redirect: true, strict-route: true, endpoint-independent-nat: true}
hosts: {"homeassistant.local": 192.168.31.21, "nas.lan": 192.168.31.21, "openwrt.lan": 192.168.31.1, "ax6s.lan": 192.168.31.2, "huai-PC.lan": 192.168.31.15}
dns:
  enable: true
  prefer-h3: false
  listen: "0.0.0.0:1053"
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter: ["+.lan", "+.local", "localhost.ptlogin2.qq.com", "+.msftconnecttest.com", "+.msftncsi.com", "+.googleapis.com", "+.googleapis.cn", "alt7-mtalk.google.com", "alt8-mtalk.google.com", "mtalk-dev.google.com", "mtalk-staging.google.com", "mtalk4.google.com", "alt1-mtalk.google.com", "alt2-mtalk.google.com", "alt3-mtalk.google.com", "alt4-mtalk.google.com", "alt5-mtalk.google.com", "alt6-mtalk.google.com", "mtalk.google.com", "ntp.aliyun.com"]
  use-hosts: true
  default-nameserver: ["223.5.5.5#DIRECT"]
  proxy-server-nameserver: ["https://dns.alidns.com/dns-query#DIRECT"]
  nameserver: ["https://cloudflare-dns.com/dns-query#M"]
  direct-nameserver: ["https://dns.alidns.com/dns-query#DIRECT"]
  nameserver-policy:
    "rule-set:microsoft": "https://cloudflare-dns.com/dns-query#Microsoft"
    # "rule-set:ad-site-classical": "rcode://refused"
    "rule-set:huawei-site": "rcode://refused"
    "rule-set:openai": "https://cloudflare-dns.com/dns-query#OpenAi"
    "rule-set:pikpak-download-site": "https://cloudflare-dns.com/dns-query#PikPak"
    "rule-set:steam-site-classical": "https://cloudflare-dns.com/dns-query#Steam"
    "rule-set:github": "https://cloudflare-dns.com/dns-query#GitHub"
    "rule-set:codeberg": "https://cloudflare-dns.com/dns-query#GitHub"
    "rule-set:telegram-site": "https://cloudflare-dns.com/dns-query#Telegram"
    "rule-set:twitter": "https://cloudflare-dns.com/dns-query#US_fallback"
    "rule-set:facebook": "https://cloudflare-dns.com/dns-query#US_fallback"
    "rule-set:tiktok": "https://cloudflare-dns.com/dns-query#JP_fallback"
    "rule-set:netflix": "https://cloudflare-dns.com/dns-query#Netflix"
    "rule-set:youtube": "https://dns.google/dns-query#Google"
    "rule-set:googlefcm": "https://dns.google/dns-query#Google"
    "rule-set:google": "https://dns.google/dns-query#Google"
    "rule-set:speedtest-site-classical": "https://cloudflare-dns.com/dns-query#M"
proxies: []
proxy-groups:
  - {<<: *select, name: M, proxies: [JP_loadbalance, US_loadbalance, SG_loadbalance, DIRECT]}
  - {<<: *select, name: Default, type: select, proxies: [M, DIRECT]}
  - {<<: *select, name: Google, proxies: [JP_fallback, US_fallback, SG_fallback]}
  - {<<: *select, name: OpenAi, proxies: [JP_fallback, US_fallback, SG_fallback]}
  - {<<: *select, name: Telegram, proxies: [JP_fallback, US_fallback, SG_fallback]}
  - {<<: *select, name: Netflix, proxies: [JP_fallback, SG_fallback, US_fallback]}
  - {<<: *select, name: Steam, proxies: [JP_fallback, SG_fallback, US_fallback]}
  - {<<: *select, name: PikPak, proxies: [JP_loadbalance, SG_fallback, US_fallback, JP_fallback, SG_loadbalance, US_loadbalance]}
  - {<<: *select, name: GitHub, proxies: [JP_fallback, SG_fallback, US_fallback, DIRECT]}
  - {<<: *select, name: Microsoft, proxies: [JP_fallback, SG_fallback, DIRECT, US_fallback]}
  - {<<: *fallback, name: JP_fallback, filter: "(?i)(日本|jp|japan)"}
  - {<<: *fallback, name: US_fallback, filter: "(?i)(美国|us|united|america)"}
  - {<<: *fallback, name: SG_fallback, filter: "(?i)(新加坡|sg|singapore)"}
  - {<<: *load-balance, name: JP_loadbalance, filter: "(?i)(日本|jp|japan)"}
  - {<<: *load-balance, name: US_loadbalance, filter: "(?i)(美国|us|united|america)"}
  - {<<: *load-balance, name: SG_loadbalance, filter: "(?i)(新加坡|sg|singapore)"}
rule-providers:
  archlinux: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/archlinux.mrs}
  adguard: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/adguard.mrs}
  # ad-site-classical: { <<: *classical, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/ad/ad-site-classical.yaml }
  ad-ip: {<<: *ipcidr, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/ad/ad-ip.mrs}
  alibaba-site: {<<: *domain, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/alibaba/alibaba-site.mrs}
  alibaba-ip: {<<: *ipcidr, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/alibaba/alibaba-ip.mrs}
  apkpure: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/apkpure.mrs}
  codeberg: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/codeberg.mrs}
  cloudflare: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cloudflare.mrs}
  cloudflare-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/cloudflare.mrs}
  cn-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/cn/cn-site.mrs}
  cn-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/cn/cn-ip.mrs}
  docker: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/docker.mrs}
  direct-cf-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/direct/direct-cf-site.mrs}
  direct-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/direct/direct-site.mrs}
  direct-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/direct/direct-ip.mrs}
  mozilla: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/mozilla.mrs}
  gfw-site: {<<: *domain, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/gfw/gfw-site.mrs}
  github: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs}
  google: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/google.mrs}
  google-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/google.mrs}
  googlefcm: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/googlefcm.mrs}
  huawei-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/huawei/huawei-site.mrs}
  huawei-direct-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/huawei/huawei-direct-site.mrs}
  huawei-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/huawei/huawei-ip.mrs}
  javdb: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/javdb.mrs}
  jd: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/jd.mrs}
  local-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/local/local-ip.mrs}
  microsoft: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft.mrs}
  netflix: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/netflix.mrs}
  netflix-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/netflix.mrs}
  openai: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs}
  openwrt: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openwrt.mrs}
  pikpak-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash//pikpak/pikpak-site.mrs}
  pikpak-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/pikpak/pikpak-ip.mrs}
  pikpak-download-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/pikpak-download/pikpak-download-site.mrs}
  proxy-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/proxy/proxy-site.mrs}
  reddit: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/reddit.mrs}
  speedtest-site-classical: {<<: *classical, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/speedtest/speedtest-site-classical.yaml}
  spotify: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/spotify.mrs}
  steam-site-classical: {<<: *classical, url: https://github.com/yljos/rule-set/raw/refs/heads/main/clash/steam/steam-site-classical.yaml}
  telegram-site: {<<: *domain, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/telegram/telegram-site.mrs}
  telegram-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/yljos/rule-set/refs/heads/main/clash/telegram/telegram-ip.mrs}
  tiktok: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tiktok.mrs}
  tmdb: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tmdb.mrs}
  twitter: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/twitter.mrs}
  twitter-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/twitter.mrs}
  wikimedia: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/wikimedia.mrs}
  youtube: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube.mrs}
  f-droid: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/f-droid.mrs}
  tencent: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tencent.mrs}
  facebook: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/facebook.mrs}
  facebook-ip: {<<: *ipcidr, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/facebook.mrs}
rules:
  - "AND,((DST-PORT,443),(NETWORK,UDP)),REJECT"
  # - "RULE-SET,ad-site-classical,REJECT-DROP"
  - "RULE-SET,ad-ip,REJECT-DROP"
  - "RULE-SET,huawei-direct-site,DIRECT"
  - "RULE-SET,huawei-site,REJECT-DROP"
  - "RULE-SET,huawei-ip,REJECT-DROP"
  - "SRC-IP-CIDR,192.168.31.24/32,DIRECT"

  - "RULE-SET,cloudflare,M"
  - "DOMAIN-KEYWORD,msftconnecttest.com,Microsoft"
  - "DOMAIN-KEYWORD,msftncsi.com,Microsoft"
  - "DOMAIN-KEYWORD,googleapis,Google"
  - "RULE-SET,direct-site,DIRECT"
  - "RULE-SET,direct-cf-site,DIRECT"
  - "RULE-SET,pikpak-site,PikPak"
  - "RULE-SET,pikpak-download-site,PikPak"
  - "RULE-SET,alibaba-site,DIRECT"
  - "RULE-SET,jd,DIRECT"
  - "RULE-SET,tencent,DIRECT"
  - "RULE-SET,googlefcm,DIRECT"
  - "RULE-SET,proxy-site,M"
  - "RULE-SET,github,GitHub"
  - "RULE-SET,codeberg,Github"
  - "RULE-SET,docker,M"
  - "RULE-SET,archlinux,M"
  - "RULE-SET,openwrt,M"
  - "RULE-SET,mozilla,M"
  - "RULE-SET,microsoft,Microsoft"
  - "RULE-SET,openai,OpenAi"
  - "RULE-SET,youtube,Google"
  - "RULE-SET,google,Google"
  - "RULE-SET,netflix,Netflix"
  - "RULE-SET,tiktok,JP_fallback"
  - "RULE-SET,tmdb,M"
  - "RULE-SET,telegram-site,Telegram"
  - "RULE-SET,twitter,US_fallback"
  - "RULE-SET,facebook,US_fallback"
  - "RULE-SET,reddit,M"
  - "RULE-SET,adguard,M"
  - "RULE-SET,speedtest-site-classical,M"
  - "RULE-SET,wikimedia,M"
  - "RULE-SET,javdb,M"
  - "RULE-SET,apkpure,M"
  - "RULE-SET,f-droid,M"
  - "RULE-SET,spotify,M"
  - "RULE-SET,steam-site-classical,Steam"
  - "RULE-SET,gfw-site,M"
  - "RULE-SET,cn-site,DIRECT"
  # ipcidr
  - "RULE-SET,local-ip,DIRECT"
  - "RULE-SET,direct-ip,DIRECT"
  - "RULE-SET,cloudflare-ip,M"
  - "RULE-SET,pikpak-ip,PikPak"
  - "RULE-SET,alibaba-ip,DIRECT"
  - "RULE-SET,telegram-ip,Telegram"
  - "RULE-SET,twitter-ip,US_fallback"
  - "RULE-SET,facebook-ip,US_fallback"
  - "RULE-SET,netflix-ip,Netflix"
  - "RULE-SET,google-ip,Google"
  - "RULE-SET,cn-ip,DIRECT"
  - "MATCH,Default"
